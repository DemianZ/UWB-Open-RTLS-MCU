{"ast":null,"code":"import _classCallCheck from \"/Users/igornikolaev/workspace/uwb-rtls/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/igornikolaev/workspace/uwb-rtls/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/igornikolaev/workspace/uwb-rtls/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/igornikolaev/workspace/uwb-rtls/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/igornikolaev/workspace/uwb-rtls/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/igornikolaev/workspace/uwb-rtls/client/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTerminal } from \"@fortawesome/free-solid-svg-icons\";\nimport SerialConsole from './items/serial-console';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Route, {\n        render: function render(_ref) {\n          var location = _ref.location,\n              history = _ref.history;\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, React.createElement(SideNav, {\n            onSelect: function onSelect(selected) {\n              var to = '/' + selected;\n\n              if (location.pathname !== to) {\n                history.push(to);\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, React.createElement(SideNav.Toggle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }), React.createElement(SideNav.Nav, {\n            defaultSelected: \"serial-\\u0441onsole\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(NavItem, {\n            eventKey: \"serial-console\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(NavIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(FontAwesomeIcon, {\n            icon: faTerminal,\n            style: {\n              fontSize: '1.5em'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          })), React.createElement(NavText, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \"Serial Console\")))), React.createElement(\"main\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, React.createElement(Route, {\n            path: \"/serial-console\",\n            component: function component(props) {\n              return React.createElement(SerialConsole, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 42\n                },\n                __self: this\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      })) // <SerialConsole />\n      ;\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/igornikolaev/workspace/uwb-rtls/client/src/App.js"],"names":["React","BrowserRouter","Route","SideNav","NavItem","NavIcon","NavText","FontAwesomeIcon","faTerminal","SerialConsole","App","location","history","selected","to","pathname","push","fontSize","props","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AAEA,OAAOC,OAAP,IAAkBC,OAAlB,EAA2BC,OAA3B,EAAoCC,OAApC,QAAmD,2BAAnD;AACA,OAAO,kDAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AAEA,OAAOC,aAAP,MAA0B,wBAA1B;;IAEMC,G;;;;;;;;;;;;;6BACK;AACP,aAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAK;AAAA,cAAEC,QAAF,QAAEA,QAAF;AAAA,cAAYC,OAAZ,QAAYA,OAAZ;AAAA,iBAChB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,OAAD;AACI,YAAA,QAAQ,EAAE,kBAACC,QAAD,EAAc;AACpB,kBAAMC,EAAE,GAAG,MAAMD,QAAjB;;AACA,kBAAIF,QAAQ,CAACI,QAAT,KAAsBD,EAA1B,EAA8B;AAC1BF,gBAAAA,OAAO,CAACI,IAAR,CAAaF,EAAb;AACH;AACJ,aANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAQE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EASE,oBAAC,OAAD,CAAS,GAAT;AAAa,YAAA,eAAe,EAAC,qBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,OAAD;AAAS,YAAA,QAAQ,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,eAAD;AAAiB,YAAA,IAAI,EAAEN,UAAvB;AAAmC,YAAA,KAAK,EAAE;AAAES,cAAAA,QAAQ,EAAE;AAAZ,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADJ,EAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BALJ,CADJ,CATF,CADF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,iBAAZ;AAA8B,YAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,qBAAI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ;AAAA,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAtBF,CADgB;AAAA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ,CAkCE;AAlCF;AAoCD;;;;EAtCelB,KAAK,CAACmB,S;;AAyCxB,eAAeT,GAAf","sourcesContent":["import React from 'react';\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTerminal } from \"@fortawesome/free-solid-svg-icons\";\n\nimport SerialConsole from './items/serial-console';\n\nclass App extends React.Component {\n  render() {\n    return (\n      \n        <BrowserRouter>\n          <Route render = { ({location, history}) => (\n            <React.Fragment>\n              <SideNav\n                  onSelect={(selected) => {\n                      const to = '/' + selected;\n                      if (location.pathname !== to) {\n                          history.push(to);\n                      }\n                  }}\n              >\n                <SideNav.Toggle />\n                <SideNav.Nav defaultSelected=\"serial-сonsole\">\n                    <NavItem eventKey=\"serial-console\">\n                        <NavIcon>\n                          <FontAwesomeIcon icon={faTerminal} style={{ fontSize: '1.5em' }}/>\n                            {/* <i className=\"fas fa-home\" style={{ fontSize: '1.75em' }} /> */}\n                        </NavIcon>\n                        <NavText>\n                            Serial Console\n                        </NavText>\n                    </NavItem>\n                </SideNav.Nav>\n              </SideNav>\n              <main>\n                {/* <Route path=\"/\" exact component={props => <SerialConsole />} /> */}\n                <Route path=\"/serial-console\" component={props => <SerialConsole />} />\n              </main>\n            </React.Fragment>\n          )} />\n        </BrowserRouter>\n      \n      // <SerialConsole />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}