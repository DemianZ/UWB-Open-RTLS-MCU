/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_PROTO_SETTINGS_PB_H_INCLUDED
#define PB_PROTO_SETTINGS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Settings_node_type {
    Settings_node_type_TYPE_NONE = 0,
    Settings_node_type_TYPE_UNDEF = 1,
    Settings_node_type_TYPE_ANCHOR = 2,
    Settings_node_type_TYPE_SYNC_NODE = 3,
    Settings_node_type_TYPE_TAG = 4
} Settings_node_type;

typedef enum _Settings_rtls_mode {
    Settings_rtls_mode_MODE_NONE = 0,
    Settings_rtls_mode_MODE_OFF = 1,
    Settings_rtls_mode_MODE_TWR_INITIATOR = 2,
    Settings_rtls_mode_MODE_TWR_RESPONDER = 3,
    Settings_rtls_mode_MODE_TDOA = 4
} Settings_rtls_mode;

/* Struct definitions */
typedef struct _Settings {
    Settings_node_type NodeType;
    uint32_t DeviceID;
    Settings_rtls_mode RTLSMode;
    uint32_t NodeID;
    pb_byte_t NetworkMAC[6];
    uint32_t DeviceIp;
    uint32_t SubnetMask;
    uint32_t GatewayIp;
    uint32_t ServerIp;
    uint32_t ConnectionPort;
    float PositionX;
    float PositionY;
    float PositionZ;
    int32_t DWRxAntDelay;
    int32_t DWTxAntDelay;
    pb_size_t ConnectedAnchors_count;
    uint32_t ConnectedAnchors[10];
    uint32_t PollPeriod;
    int32_t PollDelay;
} Settings;


/* Helper constants for enums */
#define _Settings_node_type_MIN Settings_node_type_TYPE_NONE
#define _Settings_node_type_MAX Settings_node_type_TYPE_TAG
#define _Settings_node_type_ARRAYSIZE ((Settings_node_type)(Settings_node_type_TYPE_TAG+1))

#define _Settings_rtls_mode_MIN Settings_rtls_mode_MODE_NONE
#define _Settings_rtls_mode_MAX Settings_rtls_mode_MODE_TDOA
#define _Settings_rtls_mode_ARRAYSIZE ((Settings_rtls_mode)(Settings_rtls_mode_MODE_TDOA+1))


/* Initializer values for message structs */
#define Settings_init_default                    {_Settings_node_type_MIN, 0, _Settings_rtls_mode_MIN, 0, {0}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0}
#define Settings_init_zero                       {_Settings_node_type_MIN, 0, _Settings_rtls_mode_MIN, 0, {0}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Settings_NodeType_tag                    1
#define Settings_DeviceID_tag                    2
#define Settings_RTLSMode_tag                    3
#define Settings_NodeID_tag                      4
#define Settings_NetworkMAC_tag                  5
#define Settings_DeviceIp_tag                    6
#define Settings_SubnetMask_tag                  7
#define Settings_GatewayIp_tag                   8
#define Settings_ServerIp_tag                    9
#define Settings_ConnectionPort_tag              10
#define Settings_PositionX_tag                   11
#define Settings_PositionY_tag                   12
#define Settings_PositionZ_tag                   13
#define Settings_DWRxAntDelay_tag                14
#define Settings_DWTxAntDelay_tag                15
#define Settings_ConnectedAnchors_tag            16
#define Settings_PollPeriod_tag                  17
#define Settings_PollDelay_tag                   18

/* Struct field encoding specification for nanopb */
#define Settings_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    NodeType,          1) \
X(a, STATIC,   SINGULAR, UINT32,   DeviceID,          2) \
X(a, STATIC,   SINGULAR, UENUM,    RTLSMode,          3) \
X(a, STATIC,   SINGULAR, UINT32,   NodeID,            4) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, NetworkMAC,        5) \
X(a, STATIC,   SINGULAR, UINT32,   DeviceIp,          6) \
X(a, STATIC,   SINGULAR, UINT32,   SubnetMask,        7) \
X(a, STATIC,   SINGULAR, UINT32,   GatewayIp,         8) \
X(a, STATIC,   SINGULAR, UINT32,   ServerIp,          9) \
X(a, STATIC,   SINGULAR, UINT32,   ConnectionPort,   10) \
X(a, STATIC,   SINGULAR, FLOAT,    PositionX,        11) \
X(a, STATIC,   SINGULAR, FLOAT,    PositionY,        12) \
X(a, STATIC,   SINGULAR, FLOAT,    PositionZ,        13) \
X(a, STATIC,   SINGULAR, INT32,    DWRxAntDelay,     14) \
X(a, STATIC,   SINGULAR, INT32,    DWTxAntDelay,     15) \
X(a, STATIC,   REPEATED, UINT32,   ConnectedAnchors,  16) \
X(a, STATIC,   SINGULAR, UINT32,   PollPeriod,       17) \
X(a, STATIC,   SINGULAR, INT32,    PollDelay,        18)
#define Settings_CALLBACK NULL
#define Settings_DEFAULT NULL

extern const pb_msgdesc_t Settings_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Settings_fields &Settings_msg

/* Maximum encoded size of messages (where known) */
#define Settings_size                            180

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
