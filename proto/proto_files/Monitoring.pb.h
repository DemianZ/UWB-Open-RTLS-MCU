/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_PROTO_FILES_MONITORING_PB_H_INCLUDED
#define PB_PROTO_FILES_MONITORING_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Monitoring {
    uint32_t twr_nn;
    uint32_t twr_message_type;
    uint32_t twr_distance;
    uint32_t twr_ts;
} Monitoring;


/* Initializer values for message structs */
#define Monitoring_init_default                  {0, 0, 0, 0}
#define Monitoring_init_zero                     {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Monitoring_twr_nn_tag                    1
#define Monitoring_twr_message_type_tag          2
#define Monitoring_twr_distance_tag              3
#define Monitoring_twr_ts_tag                    4

/* Struct field encoding specification for nanopb */
#define Monitoring_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   twr_nn,            1) \
X(a, STATIC,   SINGULAR, UINT32,   twr_message_type,   2) \
X(a, STATIC,   SINGULAR, UINT32,   twr_distance,      3) \
X(a, STATIC,   SINGULAR, UINT32,   twr_ts,            4)
#define Monitoring_CALLBACK NULL
#define Monitoring_DEFAULT NULL

extern const pb_msgdesc_t Monitoring_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Monitoring_fields &Monitoring_msg

/* Maximum encoded size of messages (where known) */
#define Monitoring_size                          24

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
